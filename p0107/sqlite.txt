# 공유자료실 안내
http://naver.me/5BSXtdRN
비밀번호 : 1224

# sqlite DB 파일 확인
data/test.db (864kb)

// sqlite
- 소규모 프로젝트 적합
- python에 내장모듈로 연동 가능
- 별도의 설치프로그램이 필요없다.

// sqlitebrowser
 : sqlite db의 CRUD 관리프로그램
 : GUI 제공

관련 프로그램 >>
https://sqlitebrowser.org/dl
DB Browser for SQLite
- Standard installer for 64-bit Windows

DB Browser for SQLite - .zip (no installer)
for 64-bit Windows
: 별도 폴더 생성후 압축 해제
DB Browser for SQLite.exe 실행

SQLite 프로그램실행?
C:\Program Files\DB Browser for SQLite\
        DB Browser for SQLite.exe

>> sqlite sampleDB
data\test.db

// DB Browser for SQLite 프로그램에서
// [데이타베이스 불러오기]



// 데이타베이스란?
 - 데이타를 저장하는 저장장소
 - 엑셀 => 액세스

데이타베이스 종류
- 관계형 데이타베이스
  : 테이블 형태
  필드명(컬럼)
  레코드(행)
  : 오라클, mySQL, MARIAdb, SQLite

- No SQL : 문서단위
   몽고DB

- SQL
  : 관계형 데이타베이스 조작언어(CRUD)


sql
- 대소문자 구분하지 않는다.
  명령은 대부분 대문자로 사용
- 명령어뒤에 세미콜른(;)으로 종료

sqlite 편집기 실행은?
  - 블록 지정후 [F5]

-- SELECT => SQL 출력문
필터링 - 조건에 맞는 레코드 표시

SELECT 필드명 FROM 테이블명 (WHERE 조건절 LIMIT 숫자);

-- 특정 테이블의 전체 레코드 확인
-- SELECT * FROM 테이블명

예) CUSTOMERS 테이블에서 모든 데이타 표시

 SELECT * FROM customers;

-- 특정 테이블의 특정 필드 확인
-- SELECT 필드명1, 필드명2 FROM 테이블명;

예) CUSTOMERS 테이블에서 FirstName, LastName 필드명만 표시

SELECT FirstName, LastName FROM customers;

-- 특정 테이블에서 레코드수 제한하여 출력하기
-- SELECT * FROM 테이블명 LIMIT 숫자;
-- SELECT 필드명1, 필드명2 FROM 테이블명 LIMIT 숫자;

예) CUSTOMERS 테이블에서 5개의 레코드 보기
  SELECT * FROM customers LIMIT 5;


-- WHERE 조건절
--  = , <=, >=, <, >
--   AND, OR, NOT Clause

-- SELECT 필드명 FROM 테이블명 WHERE 조건절 ;

예) customers 테이블에서 CustomerId 가 10인 레코드 보기

  SELECT * FROM customers
		WHERE customerId = 10;

예) CUSTOMERS 테이블에서
     CustomerId 가 10 이거나 30인 레코드 보기

  SELECT * FROM customers
	WHERE CustomerId = 10  OR  CustomerId = 30;

예) PLAYLISTS 테이블에서 PlaylistId가 5보다 큰 레코드 보기
SELECT * FROM playlists
	WHERE playlistId > 5;

-- 퀴즈)
예) Albums 테이블에서 AlbumId가 5보다 크고
     ArtistId가 12보다 작은 레코드 보기

 SELECT * FROM albums
	WHERE albumId > 5 AND artistId < 12
	LIMIT 5;


예) emplyees 테이블에서 Title이 IT Staff가 아닌 레코드 보기

  SELECT * FROM employees
        WHERE NOT title = 'IT Staff';


-- 특정 컬럼을 기준으로 정렬하기
-- SELECT * FROM 테이블명
            ORDER BY 컬럼명1, 컬럼명2 ASC/DESC;


